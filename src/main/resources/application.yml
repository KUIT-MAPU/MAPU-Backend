spring:
  profiles:
    group:
      "local": "localDB, devPort"
      "dev": "devDB, devPort"
      "prod": "prodDB, prodPort"
    active: ${ACTIVE_PROFILE}
  jwt:
    secret: ${JWT_SECRET}
    token:
      access-expiration-time: 600 #10min
      refresh-expiration-time: 86400 #24hour

---
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: email
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            authorization-grant-type: authorization_code
            client-name: Google
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            scope: account_email
            redirect-uri: "http://localhost:3000/kakao/callback"
            authorization-grant-type: authorization_code
            client-name: Kakao
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
---

cloud:
  aws:
    credentials:
      access-key: ${AWS_ACCESS_KEY}
      secret-key: ${AWS_SECRET_KEY}
    s3:
      bucket: 'profile-image-s3-bucket-mapu-backend'
    region:
      static: 'ap-northeast-2'
    stack:
      auto: false

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

---

spring:
  config:
    activate:
      on-profile: "localDB"
  datasource:
    url: ${DATASOURCE_URL_LOCAL}
    username: ${DATASOURCE_USERNAME_LOCAL}
    password: ${DATASOURCE_PASSWORD_LOCAL}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      platform: mysql
      mode: always
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  data:
    redis:
      host: localhost
      port: 6379
      password: ${REDIS_PASSWORD_LOCAL}

---

spring:
  config:
    activate:
      on-profile: "devDB"
  datasource:
    url: ${DATASOURCE_URL_DEV}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      platform: mysql
      mode: always
  jpa:
    defer-datasource-initialization: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true
  log:
    config:
      path: ./logs
      filename: app-dev
      maxHistory: 7 # 7일
      totalSizeCap: 1GB # 로그 파일 사이즈

---

spring:
  config:
    activate:
      on-profile: "prodDB"
  datasource:
    url: ${DATASOURCE_URL_PROD}
    username: ${DATASOURCE_USERNAME}
    password: ${DATASOURCE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      platform: mysql
      mode: always
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        show_sql: true

---

spring:
  config:
    activate:
      on-profile: "devPort"

server:
  port: 9000

---

spring:
  config:
    activate:
      on-profile: "prodPort"

server:
  port: 9001
